
#Change Prefix to control-a
unbind C-b
set -g prefix 'C-\'
bind 'C-\' send-prefix
bind C-c new-session        #create new session
bind C-f command-prompt -p find-session 'switch-client -t %%'
bind j detach

# Set XTerm key bindings
setw -g xterm-keys on
setw -g utf8 on
# Set colors
set-option -g default-terminal "screen-256color"

# Extra keybindings
bind r source-file ~/.tmux.conf #set reload to r
bind S command-prompt -p ssh: "new-window -n %1 'ssh %1'" #ssh to somewhere with hostname
bind | split-window -h -c "#{pane_current_path}"  # split pane into 2 columns
bind - split-window -v -c "#{pane_current_path}"  # split pane into 2 rows
#bind e new-window -n '~/.tmux.conf' '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'

# Count sessions start at 1
set -g base-index 1
set -g pane-base-index 1

# activity and activity colors
setw -g monitor-activity off
set -g visual-activity on
set-option -g allow-rename off

set-option -gw window-status-activity-attr bold
set-option -gw window-status-activity-fg yellow

set-window-option -g window-status-current-fg green
set-window-option -g window-status-activity-fg yellow
set-window-option -g window-status-activity-bg default

# set mouse mode on
set -g mouse on

# use vim bindings
setw -g mode-keys vi
bind -r d select-pane -L # move left
bind -r h select-pane -D # move down
bind -r g select-pane -U # move up
bind -r t select-pane -R # move right
bind > swap-pane -D # Swap pane with next one
bind < swap-pane -U # Swap pane with previous
bind + run 'cut -c3- ~/.tmux.conf | sh -s maximize_pane' #maximize current pane

#resize pane
bind -r D resize-pane -L 2
bind -r H resize-pane -D 2
bind -r G resize-pane -U 2
bind -r T resize-pane -R 2

#enable logging
bind-key L pipe-pane "exec cat >>$HOME/'#W-tmux.log'" \; display-message 'Started logging to $HOME/#W-tmux.log'
bind-key l pipe-pane \; display-message 'Ended logging to $HOME/#W-tmux.log'

#-- copying and pasting --------------
#bind Enter copy-mode # enter copy mode
#bind b list-buffers # list paster buffers
#bind p paste-buffer # paste from the top buffer
#bind P choose-buffer # choose which buffer

#bind -t vi-copy v begin-selection
#bind -t vi-copy C-v rectangle-toggle
#bind -t vi-copy y copy-selection
#bind -t vi-copy Escape cancel
#bind -t vi-copy H start-of-line
#bind -t vi-copy L end-of-line

# copy to Mac OSX pasteboard
set-option -g default-command "reattach-to-user-namespace -l zsh"
# set v and y keys as like vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# fix enter-key to use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"




# set the title bar
set -g set-titles on
set -g set-titles-string '#H:#S.#I.#P #W #T' #window number, program name, active (or not)

#turn off visual bell, use audible instead.
set-option -g bell-action any
set-option -g visual-bell off

#add more lines to history
set -g history-limit 100000

# increase the pane number display time (for C-\ q #)
set -g display-panes-time 2000

# set control window settings
#bind M-c rename-window Control \; \
#    send-keys 'clear && htop' 'Enter' \; \
#    split-window -h -p 42 -t 1 \; \
#    select-pane -t 1 \; \
#    split-window -v -p 50 -t 1 \; \
#    swap-pane -U \; \
#    select-pane -t 3 \; \
#    split-window -v -p 33 \; \
#    send-keys 'mutt' 'Enter' \; \
#    select-pane -U \; \
#    split-window -v -p 50 \; \
#    send-keys 'centerim' 'Enter' \; \
#    select-pane -U \; \
#    send-keys 'cmus' 'Enter' \; \
#    select-pane -t 1 \;

# set status bar
set -g status-utf8 on
set -g status-bg default
set -g status-fg white
set -g status-interval 30 # about 1 minute?
set -g status-left-length 90
set -g status-right-length 60
## set -g status-left "#[fg=Green]#(whoami)#[fg=white]::#[fg=blue]#(hostname -s)#[fg=white]::#[fg=yellow]#(curl ipecho.net/plain;echo)"
## set -g status-left " #[fg=Green]#(whoami)#[fg=white]@#[fg=cyan]#10H#[fg=green]: #[fg=white]#[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}')#[fg=green] | #[default]"
set -g status-left " #[fg=Green]#(whoami)#[fg=white]@#[fg=cyan]#h#[fg=colour250] <#S> #[fg=green]: #[fg=colour134]#(curl -4 icanhazip.com) #[fg=yellow]#(ipconfig getifaddr en3 || ipconfig getifaddr en2 || ipconfig getifaddr en1 || ipconfig getifaddr en0) #[fg=green] #[default]"
set -g status-justify centre
#set -g status-right '#[fg=White]#(battery -tap) #[fg=white]%a %d %b %R'
set -g status-right '#(/Users/ezra/Documents/Battery-my/battery -tap)#[fg=White] %a %d %b %R'

##powerline integration
##run-shell "powerline-daemon -q"
##source "/Users/ezra/Library/Python/2.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf"
##setw -g automatic-rename off
